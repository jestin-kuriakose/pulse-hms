services:
  # Database
  db:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  # Backend
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    container_name: backend
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "npx prisma db push && npm start"
  # Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    container_name: frontend
    restart: unless-stopped
    depends_on:
      - backend
  # Webserver
  webserver:
    image: caddy:2
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./webserver/Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - frontend

volumes:
  postgres_data: